<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMhAAAAEAIAAoDQAAFgAAACgAAAAyAAAAIAAAAAEAIAAAAAAAAA0AAMIeAADCHgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAA2MsRANjLzADYy/8A2Mv/ANjLmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYy0QA2MvuANjL/wDY
        y/8A2Mt3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjLZgDYy/8A2Mv/ANjL/wDYy6oAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA2MtVANjLuwDYy/8A2Mv/ANjL/wDYy3cA2MsRAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Mt3ANjL/wDYy/8A2MtEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADYy2YA2Mv/ANjL/wDYy2YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2MsiANjL/wDY
        y/8A2MvdAAAAAAAAAAAAAAAAAAAAAADYyxEA2MvuANjL/wDYy/8A2Mv/ANjL/wDYy/8A2Mv/ANjL/wDY
        y90A2MsiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYy3cA2Mv/ANjL/wDY
        y0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjLEQDYy+4A2Mv/ANjL3QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADYy5kA2Mv/ANjL/wDYy2YAAAAAAAAAAAAAAAAAAAAAAAAAAADYy4gA2MvdANjLdwAA
        AAAAAAAAAAAAAADYy6oA2Mv/ANjL/wDYy4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAANjLdwDYy/8A2Mv/ANjLRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjLdwDY
        y/8A2Mv/ANjL/wDYy/8A2Mv/ANjL/wDYy/8A2Mv/ANjL/wDYy/8A2MvdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAANjLIgDYyyIAAAAAAAAAAAAAAAAAAAAAANjLEQDYy/8A2Mv/ANjLqgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Mt3ANjL/wDYy/8A2MtEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA2MsRANjL7gDYy/8A2Mv/ANjL/wDYy/8A2Mv/ANjL/wDYy/8A2Mv/ANjL/wDY
        y2YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjL/wDY
        y/8A2Mu7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYy3cA2Mv/ANjL/wDY
        y0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Mt3ANjL/wDYy/8A2MtEAAAAAAAA
        AAAA2MsiANjL/wDYy/8A2MvdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA2Mv/ANjL/wDYy7sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAANjLdwDYy/8A2Mv/ANjLRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY
        yxEA2MvuANjL/wDYy7sAAAAAAAAAAADYy3cA2Mv/ANjL/wDYy2YAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYy/8A2Mv/ANjLuwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Mt3ANjL/wDYy/8A2MtEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYy3cA2Mv/ANjL/wDYyyIA2MsRANjL7gDYy/8A2MvdAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjL/wDY
        y/8A2Mu7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYy3cA2Mv/ANjL/wDY
        y0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjLEQDYy/8A2Mv/ANjLmQDY
        y3cA2Mv/ANjL/wDYy2YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA2Mv/ANjL/wDYy7sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAANjLdwDYy/8A2Mv/ANjLRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAANjLmQDYy/8A2Mv/ANjL3QDYy/8A2MvdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYy/8A2Mv/ANjLuwAAAAAAAAAAAAAAAAAA
        AAAAAAAAANjLZgDYyxEAAAAAAAAAAAAAAAAA2Mt3ANjL/wDYy/8A2MtEAAAAAAAAAAAAAAAAANjLRADY
        y0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2MsiANjL/wDYy/8A2Mv/ANjL/wDYy2YAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjL/wDY
        y/8A2Mu7AAAAAAAAAAAAAAAAAAAAAAAAAAAA2MtmANjL/wDYy/8A2Mv/ANjL/wDYy/8A2Mv/ANjL/wDY
        y/8A2Mv/ANjL/wDYy/8A2Mv/ANjLRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2MuqANjL/wDY
        y/8A2MvuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA2Mv/ANjL/wDYy7sAAAAAAAAAAAAAAAAAAAAAAAAAAADYy2YA2Mv/ANjL/wDY
        y/8A2Mv/ANjL/wDYy/8A2Mv/ANjL/wDYy/8A2Mv/ANjL/wDYy/8A2MtEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAANjLEQDYy90A2Mv/ANjL/wDYy/8A2MszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjLZgDYy/8A2Mv/ANjL7gDYyzMAAAAAAAAAAAAA
        AAAAAAAAANjLZgDYyxEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjLRADY
        y0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////8AA////////wAD4Pwfg/AfAAPw/h+HgA8AA/D+H4fHD
        wAD8P8AD88PAAPw/wAP/48AA/D/hh//jwAD8P+GH/+PAAPw/8A//48AA/D/wD//jwAD8P/gf/+PAAJw5
        +B//48AAgAH8P//jwACAAfgf/8HAAJ/5/////8AA
</value>
  </data>
</root>